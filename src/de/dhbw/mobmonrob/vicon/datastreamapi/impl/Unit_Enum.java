/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package de.dhbw.mobmonrob.vicon.datastreamapi.impl;

public final class Unit_Enum {
  public final static Unit_Enum Unit_Unknown = new Unit_Enum("Unit_Unknown");
  public final static Unit_Enum Volt = new Unit_Enum("Volt");
  public final static Unit_Enum Newton = new Unit_Enum("Newton");
  public final static Unit_Enum NewtonMeter = new Unit_Enum("NewtonMeter");
  public final static Unit_Enum Meter = new Unit_Enum("Meter");
  public final static Unit_Enum Kilogram = new Unit_Enum("Kilogram");
  public final static Unit_Enum Second = new Unit_Enum("Second");
  public final static Unit_Enum Ampere = new Unit_Enum("Ampere");
  public final static Unit_Enum Kelvin = new Unit_Enum("Kelvin");
  public final static Unit_Enum Mole = new Unit_Enum("Mole");
  public final static Unit_Enum Candela = new Unit_Enum("Candela");
  public final static Unit_Enum Radian = new Unit_Enum("Radian");
  public final static Unit_Enum Steradian = new Unit_Enum("Steradian");
  public final static Unit_Enum MeterSquared = new Unit_Enum("MeterSquared");
  public final static Unit_Enum MeterCubed = new Unit_Enum("MeterCubed");
  public final static Unit_Enum MeterPerSecond = new Unit_Enum("MeterPerSecond");
  public final static Unit_Enum MeterPerSecondSquared = new Unit_Enum("MeterPerSecondSquared");
  public final static Unit_Enum RadianPerSecond = new Unit_Enum("RadianPerSecond");
  public final static Unit_Enum RadianPerSecondSquared = new Unit_Enum("RadianPerSecondSquared");
  public final static Unit_Enum Hertz = new Unit_Enum("Hertz");
  public final static Unit_Enum Joule = new Unit_Enum("Joule");
  public final static Unit_Enum Watt = new Unit_Enum("Watt");
  public final static Unit_Enum Pascal = new Unit_Enum("Pascal");
  public final static Unit_Enum Lumen = new Unit_Enum("Lumen");
  public final static Unit_Enum Lux = new Unit_Enum("Lux");
  public final static Unit_Enum Coulomb = new Unit_Enum("Coulomb");
  public final static Unit_Enum Ohm = new Unit_Enum("Ohm");
  public final static Unit_Enum Farad = new Unit_Enum("Farad");
  public final static Unit_Enum Weber = new Unit_Enum("Weber");
  public final static Unit_Enum Tesla = new Unit_Enum("Tesla");
  public final static Unit_Enum Henry = new Unit_Enum("Henry");
  public final static Unit_Enum Siemens = new Unit_Enum("Siemens");
  public final static Unit_Enum Becquerel = new Unit_Enum("Becquerel");
  public final static Unit_Enum Gray = new Unit_Enum("Gray");
  public final static Unit_Enum Sievert = new Unit_Enum("Sievert");
  public final static Unit_Enum Katal = new Unit_Enum("Katal");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static Unit_Enum swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + Unit_Enum.class + " with value " + swigValue);
  }

  private Unit_Enum(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private Unit_Enum(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private Unit_Enum(String swigName, Unit_Enum swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static Unit_Enum[] swigValues = { Unit_Unknown, Volt, Newton, NewtonMeter, Meter, Kilogram, Second, Ampere, Kelvin, Mole, Candela, Radian, Steradian, MeterSquared, MeterCubed, MeterPerSecond, MeterPerSecondSquared, RadianPerSecond, RadianPerSecondSquared, Hertz, Joule, Watt, Pascal, Lumen, Lux, Coulomb, Ohm, Farad, Weber, Tesla, Henry, Siemens, Becquerel, Gray, Sievert, Katal };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

